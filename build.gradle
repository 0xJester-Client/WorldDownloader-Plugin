// forge's stuff
buildscript {
    repositories {
        jcenter()
        maven {
            name = 'forge'
            url = 'https://files.minecraftforge.net/maven'
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/maven'
        }
        maven {
            name = 'jitpack.io'
            url = 'https://jitpack.io'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

version project.modVersion
group project.modGroup // http://maven.apache.org/guides/mini/guide-naming-conventions.html

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

sourceSets {
    main {
        compileClasspath +=  main.compileClasspath
    }
}

minecraft {
    version = project.forgeVersion
    runDir = 'run'
    mappings = project.mcpVersion
    makeObfSourceJar = true
}

repositories {
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/maven/'
    }
    maven {
        name = 'swt-repo'
        url = "https://maven-eclipse.github.io/maven"
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
    mavenCentral()
}

dependencies {//
    //We don't want to take this with us.
    implementation 'com.google.code.gson:gson:2.8.0'
    //mixin needs to be distributed with the mod, very important
    implementation("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }
    implementation group: 'net.jodah', name: 'typetools', version: '0.6.3'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.29'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation(group: 'org.reflections', name: 'reflections', version: '0.9.11') {
        exclude group: 'com.google.guava', module: 'guava'
    }

    implementation(files("Libs/WurstMinus-Two-DiscordBotCLI-1.0-release.jar"))
    implementation(files("Libs/WurstMinus-Two-4.4-release.jar"))//This must point to the Wurst-2 Jar

    compile 'org.jetbrains.xodus:xodus-openAPI:2.0.1'
    compile 'org.jetbrains.xodus:xodus-environment:2.0.1'
    compile 'org.jetbrains.xodus:xodus-entity-store:2.0.1'
    compile 'org.jetbrains.xodus:xodus-vfs:2.0.1'

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    // move _at.cfg into META-INF
    rename '(.+_at.cfg)', 'META-INF/$1'
}

shadowJar {
    dependencies {

    }
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    exclude 'LICENSE'
    classifier = 'release'
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'mixins.WDLPlugin.refmap.json'
}

reobf {
    shadowJar {
        mappingType = 'searge'
        classpath = sourceSets.main.compileClasspath
    }
}

jar {
    manifest {
        attributes(
                'Main': 'me.third.right.worldDownloader.Main',
                'Mixin': 'mixins.WDLPlugin.json',
                'TargetVersion': '4.4',
        )
    }
}


build.dependsOn(shadowJar)